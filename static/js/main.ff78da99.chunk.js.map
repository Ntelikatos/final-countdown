{"version":3,"sources":["components/Countdown.js","components/App.js","index.js"],"names":["Pad","number","size","s","String","length","Countdown","useContext","MainContext","days","hours","minutes","seconds","isLoading","Fragment","style","fontSize","easing","direction","duration","scale","className","React","createContext","App","useState","setIsLoading","setDays","setHours","setMinutes","setSeconds","useEffect","timer","setInterval","dateFrom","dateTo","Date","diffTime","Math","abs","getTime","diffDays","floor","diffHours","diffMinutes","diffSeconds","updateDateDiff","clearInterval","Provider","value","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gMAIA,SAASA,EAAIC,EAAQC,GAEnB,IADA,IAAIC,EAAIC,OAAOH,GACRE,EAAEE,QAAUH,GAAQ,IACzBC,EAAI,IAAMA,EAEZ,OAAOA,EAGT,IAyCeG,EAzCG,WAAO,IAAD,EAC+BC,qBAAWC,GAAxDC,EADc,EACdA,KAAMC,EADQ,EACRA,MAAOC,EADC,EACDA,QAASC,EADR,EACQA,QAASC,EADjB,EACiBA,UAEvC,OACE,cAAC,IAAMC,SAAP,UACGD,EACC,sBAAME,MAAO,CAAEC,SAAU,IAAzB,wBAEA,cAAC,IAAD,CACEC,OAAO,eACPC,UAAU,UACVC,SAAU,IACVC,MAAO,CAAC,EAAG,IAJb,SAME,sBAAKC,UAAU,2CAAf,UACE,sBAAKA,UAAU,kBAAf,UACE,wCACA,6BAAKrB,EAAIS,EAAM,QAEjB,sBAAMY,UAAU,uBAAhB,eACA,sBAAKA,UAAU,kBAAf,UACE,yCACA,6BAAKrB,EAAIU,EAAO,QAElB,sBAAMW,UAAU,uBAAhB,eACA,sBAAKA,UAAU,kBAAf,UACE,2CACA,6BAAKrB,EAAIW,EAAS,QAEpB,sBAAMU,UAAU,uBAAhB,eACA,sBAAKA,UAAU,kBAAf,UACE,2CACA,6BAAKrB,EAAIY,EAAS,gBC/B1BJ,EAAcc,IAAMC,gBAE1B,SAASC,IAAO,IAAD,EACqBC,oBAAS,GAD9B,mBACNZ,EADM,KACKa,EADL,OAEWD,mBAAS,GAFpB,mBAENhB,EAFM,KAEAkB,EAFA,OAGaF,mBAAS,GAHtB,mBAGNf,EAHM,KAGCkB,EAHD,OAIiBH,mBAAS,GAJ1B,mBAINd,EAJM,KAIGkB,EAJH,OAKiBJ,mBAAS,GAL1B,mBAKNb,EALM,KAKGkB,EALH,KAiCb,OANAC,qBAAU,WACR,IAAMC,EAAQC,aAAY,kBArBL,SAACC,GACtB,IAAMC,EAAS,IAAIC,KAEbC,EAAWC,KAAKC,IAAIJ,EAAOK,UAAYN,EAASM,WAEhDC,EAAWH,KAAKI,MAAML,EAAQ,OAC9BM,EAAYL,KAAKI,MACpBL,EAAQ,MAAT,MAEIO,EAAcN,KAAKI,MAAOL,EAAQ,KAAT,KACzBQ,EAAcP,KAAKI,MAAOL,EAAQ,IAAkB,KAE1DV,EAAQc,GACRb,EAASe,GACTd,EAAWe,GACXd,EAAWe,GAEXnB,GAAa,GAImBoB,CAAe,IAAIV,KAAK,eAAc,KAEtE,OAAO,kBAAMW,cAAcf,OAI3B,cAACxB,EAAYwC,SAAb,CAAsBC,MAAO,CAAExC,OAAMC,QAAOC,UAASC,UAASC,aAA9D,SACE,qBAAKQ,UAAU,2BAAf,SACE,cAAC,EAAD,QC9CR6B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC5B,EAAD,MAEF6B,SAASC,eAAe,U","file":"static/js/main.ff78da99.chunk.js","sourcesContent":["import React, { useContext } from 'react'\r\nimport Anime from 'react-anime'\r\nimport { MainContext } from './App'\r\n\r\nfunction Pad(number, size) {\r\n  var s = String(number)\r\n  while (s.length < (size || 2)) {\r\n    s = '0' + s\r\n  }\r\n  return s\r\n}\r\n\r\nconst Countdown = () => {\r\n  const { days, hours, minutes, seconds, isLoading } = useContext(MainContext)\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {isLoading ? (\r\n        <span style={{ fontSize: 80 }}>Loading...</span>\r\n      ) : (\r\n        <Anime\r\n          easing='easeInBounce'\r\n          direction='reverse'\r\n          duration={900}\r\n          scale={[1, 0.5]}\r\n        >\r\n          <div className='container__timer u--center-flex e--glass'>\r\n            <div className='container__item'>\r\n              <span>Days</span>\r\n              <h1>{Pad(days, 2)}</h1>\r\n            </div>\r\n            <span className='container__seperator'>:</span>\r\n            <div className='container__item'>\r\n              <span>Hours</span>\r\n              <h1>{Pad(hours, 2)}</h1>\r\n            </div>\r\n            <span className='container__seperator'>:</span>\r\n            <div className='container__item'>\r\n              <span>Minutes</span>\r\n              <h1>{Pad(minutes, 2)}</h1>\r\n            </div>\r\n            <span className='container__seperator'>:</span>\r\n            <div className='container__item'>\r\n              <span>Seconds</span>\r\n              <h1>{Pad(seconds, 2)}</h1>\r\n            </div>\r\n          </div>\r\n        </Anime>\r\n      )}\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default Countdown\r\n","import React, { useEffect, useState } from 'react'\r\nimport CountDown from './Countdown'\r\nimport '../styles/main.scss'\r\n\r\n/*eslint no-extend-native: [\"error\", { \"exceptions\": [\"Number\"] }]*/\r\n// function Pad(size) {\r\n//   var s = String(this)\r\n//   while (s.length < (size || 2)) {\r\n//     s = '0' + s\r\n//   }\r\n//   return s\r\n// }\r\n\r\nconst MainContext = React.createContext()\r\n\r\nfunction App() {\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const [days, setDays] = useState(0)\r\n  const [hours, setHours] = useState(0)\r\n  const [minutes, setMinutes] = useState(0)\r\n  const [seconds, setSeconds] = useState(0)\r\n\r\n  const updateDateDiff = (dateFrom) => {\r\n    const dateTo = new Date()\r\n\r\n    const diffTime = Math.abs(dateTo.getTime() - dateFrom.getTime())\r\n\r\n    const diffDays = Math.floor(diffTime / (1000 * 60 * 60 * 24))\r\n    const diffHours = Math.floor(\r\n      (diffTime % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)\r\n    )\r\n    const diffMinutes = Math.floor((diffTime % (1000 * 60 * 60)) / (1000 * 60))\r\n    const diffSeconds = Math.floor((diffTime % (1000 * 60)) / 1000)\r\n\r\n    setDays(diffDays)\r\n    setHours(diffHours)\r\n    setMinutes(diffMinutes)\r\n    setSeconds(diffSeconds)\r\n\r\n    setIsLoading(false)\r\n  }\r\n\r\n  useEffect(() => {\r\n    const timer = setInterval(() => updateDateDiff(new Date('9/1/2021')), 1000)\r\n\r\n    return () => clearInterval(timer)\r\n  })\r\n\r\n  return (\r\n    <MainContext.Provider value={{ days, hours, minutes, seconds, isLoading }}>\r\n      <div className='container u--center-flex'>\r\n        <CountDown></CountDown>\r\n      </div>\r\n    </MainContext.Provider>\r\n  )\r\n}\r\n\r\nexport { App, MainContext }\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './styles/main.scss'\r\nimport { App } from './components/App'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}